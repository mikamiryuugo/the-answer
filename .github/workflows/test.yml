name: Ruby Test and Deploy

on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6.6'

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-

    - name: Install Bundler
      run: |
        gem install bundler

    - name: Install Gems
      run: bundle install --path vendor/bundle --jobs 4 --retry 3

    # - name: Run Tests
    #   run: |
        # bundle exec rake test

    - name: Deploy to Heroku
      env:
        HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
        HEROKU_APP_NAME: "the-answers"
      if: github.ref == 'refs/heads/master' && job.status == 'success'
      run: git push https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git origin/master:master

# slack通知
    - name: Slack Notification on SUCCESS
      if: success()
      uses: tokorom/action-slack-incoming-webhook@master
      env:
        INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        text: Successfully automated deployment.
        attachments: |
          [
            {
              "color": "good",
              "author_name": "${{ github.actor }}",
              "author_icon": "${{ github.event.sender.avatar_url }}",
              "fields": [
                {
                  "title": "Commit Message",
                  "value": "${{ env.COMMIT_MESSAGE }}"
                },
                {
                  "title": "GitHub Actions URL",
                  "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                },
                {
                  "title": "Compare URL",
                  "value": "${{ github.event.compare }}"
                },
                {
                  "title": "Repository Description",
                  "value": "${{ github.event.repository.description }}"
                }
              ]
            }
          ]